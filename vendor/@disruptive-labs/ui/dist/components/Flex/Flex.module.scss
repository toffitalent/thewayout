@use 'sass:math';
@use '@styles/theme';
@use '../../styles/mixins';

.container {
  width: 100%;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  align-content: stretch;
  align-items: stretch;
  justify-content: flex-start;
}

.item {
  margin: 0;
}

@each $s, $size in theme.$spacing {
  .container.spacing-#{$s} {
    width: unset;
    width: calc(100% + #{$size});
    margin-top: $size * -1;
    margin-left: $size * -1;

    > .item {
      padding-top: $size;
      padding-left: $size;
    }
  }
}

// Flex item sizes
// xs
.bp-xs-auto {
  max-width: none;
  flex-basis: auto;
  flex-grow: 0;
}

.bp-xs-true {
  max-width: 100%;
  flex-basis: 0;
  flex-grow: 1;
}

@for $i from 1 through 12 {
  .bp-xs-#{$i} {
    max-width: math.percentage(math.div($i, 12));
    flex-basis: math.percentage(math.div($i, 12));
    flex-grow: 0;
  }
}

@each $breakpoint, $bp in theme.$breakpoints {
  @include mixins.mq($breakpoint) {
    .bp-#{$breakpoint}-auto {
      max-width: none;
      flex-basis: auto;
      flex-grow: 0;
    }

    .bp-#{$breakpoint}-true {
      max-width: 100%;
      flex-basis: 0;
      flex-grow: 1;
    }

    @for $i from 1 through 12 {
      .bp-#{$breakpoint}-#{$i} {
        max-width: math.percentage(math.div($i, 12));
        flex-basis: math.percentage(math.div($i, 12));
        flex-grow: 0;
      }
    }
  }
}
