"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { newObj[key] = obj[key]; } } } newObj.default = obj; return newObj; } } function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _chunkGTRQRR6Yjs = require('./chunk-GTRQRR6Y.js');var _deepmerge = require('deepmerge'); var _deepmerge2 = _interopRequireDefault(_deepmerge);var _dotenv = require('dotenv'); var v = _interopRequireWildcard(_dotenv);var _dotenvexpand = require('dotenv-expand'); var _dotenvexpand2 = _interopRequireDefault(_dotenvexpand);var _fs = require('fs'); var c = _interopRequireWildcard(_fs);var _path = require('path');var y=e=>typeof e=="object"&&e!==null,T=e=>{switch(typeof e){case"boolean":return"boolean";case"number":return"number";default:return y(e)?"json":"string"}},F=e=>e||_chunkGTRQRR6Yjs.e.getEnv()||process.env,x=(...e)=>e.find(n=>typeof n<"u"),R=e=>e?typeof e=="string"?[e]:[e.name,e.type]:[],V=(e="",n,t)=>{if(!e)return;let r=t[e];if(typeof r>"u")return r;switch(n){case"boolean":return r==="true"||r==="1";case"json":return JSON.parse(r);case"number":return parseInt(r,10);default:return String(r)}},A= exports.a =(e,n,t)=>{let r=_chunkGTRQRR6Yjs.e.environment()||_chunkGTRQRR6Yjs.c.call(void 0, )||"development",o=typeof e=="string"?{default:n,env:e}:e,a=x(o[r],o.default),[s,C]=R(o.env),l=V(s,C||T(a),F(t));return y(a)?_deepmerge2.default.all([o.default||{},o[r]||{},l||{}]):_nullishCoalesce(l, () => (a))};var P=(e,n)=>(Object.defineProperty(n,_chunkGTRQRR6Yjs.a,{configurable:!1,enumerable:!1,value:e,writable:!1}),n);var H=(e={})=>{let n={...N(e),...Object.keys(process.env).reduce((r,o)=>({...r,[o]:process.env[o]}),{})};_chunkGTRQRR6Yjs.e.set(_chunkGTRQRR6Yjs.b,n);let t={[_chunkGTRQRR6Yjs.b]:n,...m(e,n)};return t=_optionalChain([e, 'access', _ => _.validate, 'optionalCall', _2 => _2(t)])||t,_chunkGTRQRR6Yjs.e.merge(t),_chunkGTRQRR6Yjs.e},L= exports.d =(e,n)=>{let t=m({load:Array.isArray(n)?n:[n]},_chunkGTRQRR6Yjs.e.getEnv());return _chunkGTRQRR6Yjs.e.merge({[e]:t}),new (0, _chunkGTRQRR6Yjs.d)(t)},m=(e,n={})=>(Array.isArray(e.load)?e.load:[]).reduce((r,o)=>{let a=o[_chunkGTRQRR6Yjs.a],s=o(n);return a?_deepmerge2.default.call(void 0, r,{[a]:s}):_deepmerge2.default.call(void 0, r,s)},{}),N=e=>{let n={CONFIG_ENV:_chunkGTRQRR6Yjs.c.call(void 0, )||"",NODE_ENV:process.env.NODE_ENV||""};if(!e.ignoreEnvFile)try{let t=Array.isArray(e.envFilePath)?e.envFilePath:[e.envFilePath||_path.resolve.call(void 0, process.cwd(),".env")];e.ignoreEnvSpecificFiles||(t=[...t,...n.CONFIG_ENV?t.map(r=>`${r}.${n.CONFIG_ENV}`):[]]),t.forEach(r=>{c.existsSync(r)&&(n={...n,...v.parse(c.readFileSync(r))},e.expandVariables&&(n=_dotenvexpand2.default.expand({parsed:n}).parsed||n))})}catch(t){console.warn("@disruptive-labs/config: .env file loading failed!",t)}return n};exports.a = A; exports.b = P; exports.c = H; exports.d = L;
