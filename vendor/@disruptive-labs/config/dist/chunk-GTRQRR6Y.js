"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; } function _optionalChain(ops) { let lastAccessLHS = undefined; let value = ops[0]; let i = 1; while (i < ops.length) { const op = ops[i]; const fn = ops[i + 1]; i += 2; if ((op === 'optionalAccess' || op === 'optionalCall') && value == null) { return undefined; } if (op === 'access' || op === 'optionalAccess') { lastAccessLHS = value; value = fn(value); } else if (op === 'call' || op === 'optionalCall') { value = fn((...args) => value.call(lastAccessLHS, ...args)); lastAccessLHS = undefined; } } return value; }var _deepmerge = require('deepmerge'); var _deepmerge2 = _interopRequireDefault(_deepmerge);var _lodashget = require('lodash.get'); var _lodashget2 = _interopRequireDefault(_lodashget);var _lodashset = require('lodash.set'); var _lodashset2 = _interopRequireDefault(_lodashset);var f="__CONFIG_REGISTRATION_KEY",t= exports.b ="__ENV";var i=()=>process.env.CONFIG_NODE_ENV||process.env.APP_ENV||process.env.NODE_ENV;var r=class{constructor(n={}){this.internalConfig=n}get(n,e){return _lodashget2.default.call(void 0, this.internalConfig,n,e)}merge(n){Object.assign(this.internalConfig,_deepmerge2.default.call(void 0, this.internalConfig,n))}set(n,e){_lodashset2.default.call(void 0, this.internalConfig,n,e)}environment(...n){let e=_optionalChain([this, 'access', _ => _.internalConfig, 'access', _2 => _2[t], 'optionalAccess', _3 => _3.CONFIG_ENV])||i();return n.length?n.includes(e):e}getEnv(n){return n?_optionalChain([this, 'access', _4 => _4.internalConfig, 'access', _5 => _5[t], 'optionalAccess', _6 => _6[n]]):this.internalConfig[t]}};var y=new r;exports.a = f; exports.b = t; exports.c = i; exports.d = r; exports.e = y;
